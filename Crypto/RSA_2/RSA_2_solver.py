from Crypto.Util.number import long_to_bytes
from gmpy2 import iroot

#given
n = 20373191306015378609024957561003246072851433773643950899585485479802168250063879377429693509541195394404750393064442175314530441149888147422304714888546311120199247939958717043849993093907921016159003971709681535157422022622112882722704942688058544571230770992475311197256201030265090266686899211063252673655012231889741745401318928040984197346772490783719993081841870145445000530534896984036434062639982559111840336135234691754599661837887553066687282546981597855672976793810266741764344541852675416516202262359329855804648006152720927958556930845812048811293774189570706330088437872588121711170558822888872999007309
e = 7
ciphertext = 1800584190307178070934334324937126231619234401873250178048979601214838605787221846381296687158891774072862218962671938552119757166428461147307658840790011532071243614672025296343555830715695218102035493033919633846377518228262523152546470696398839597759684181176280175864698199816867277853024464770827960357731917291373448570798809968332255740725839124846919158660105267092425541062471542424101019551993805833749057241288597473761982438997402509035670470804467305348136941900586460066488795977450027234002430879117211777438760361995165741962920926745048728690809490165098396892366782464


root , ismultiple = iroot(ciphertext,e)
if ismultiple:
    try:
        print('Securinets{' + long_to_bytes(root).decode('utf-8') + '}')

    except UnicodeDecodeError:
        pass
